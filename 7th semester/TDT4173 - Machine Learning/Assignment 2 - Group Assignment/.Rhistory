summary(mod)
ggplot(data, aes(x=x0 + x1, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
ggplot(data, aes(x=x0 + x1, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
library(ggplot2)
library(ggplot2)
ggplot(data, aes(x=x0 + x1, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
ggplot(data, aes(x=x0, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
ggplot(data, aes(x=x0+x1, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
ggplot(data, aes(x=x0, y=y)) + geom_point() +
stat_smooth(method="glm", color="green", se=FALSE,
method.args = list(family=binomial))
install.packages("cluster")
install.packages("ClusterR")
install.packages("cluster")
data <- read.csv("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/TDT-4173-2023-task-1-master/k_means/data_2.csv")
data
kmeans(data, centers = 3, nstart = 20)
```{r}
library(ClusterR)
library(cluster)
data <- read.csv("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/TDT-4173-2023-task-1-master/k_means/data_2.csv")
set.seed(97)
kmeans(data, centers = 8, nstart = 20)
plot(data)
plot(data, type = "p")
?plot
plot.window((0,1),(0,1))
```{r}
plot(data, type = "p", asp = 1)
kmean <- kmeans(data, centers = 8, nstart = 20)
plot(kmean$cluster)
plot(data, type = "p", asp = 1)
plot(kmean$cluster)
plot(data, type = "p", asp = 1)
lines(kmean$cluster)
clusplot(data,
kmean$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster iris"),
xlab = 'Sepal.Length',
ylab = 'Sepal.Width')
clusplot(data,
kmean$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE)
data["x0"] = data["x0"]/10
plot(data, type = "p", asp = 1)
lines(kmean$cluster)
set.seed(97)
kmean <- kmeans(data, centers = 8, nstart = 20)
plot(kmean$cluster)
kmean$cluster
kmean
kmean$"cluster means"
kmean
View(kmean)
kmean$centers
plot(kmean$centers)
data["x0"] = data["x0"]
data <- read.csv("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/TDT-4173-2023-task-1-master/k_means/data_2.csv")
data["x0"] = data["x0"]
set.seed(97)
kmean <- kmeans(data, centers = 8, nstart = 20)
plot(kmean$centers)
plot(kmean$centers, pch = 8)
plot(data, type = "p", asp = 1)
points(kmean$centers, pch = 8)
library(cluster)
library(HSAUR)
install.packages("HSAUR", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
km    <- kmeans(data,3)
dissE <- daisy(data)
dE2   <- dissE^2
sk2   <- silhouette(km$cl, dE2)
plot(sk2)
install.packages("arrow", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
library("arrow")
?arrow
library(arrow)
read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_observed.parquet")
data <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_observed.parquet")
View(data)
library(arrow)
A_X_Train_Observed <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_observed.parquet")
A_X_Train_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_estimated.parquet")
A_X_Test_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_test_estimated.parquet")
A_Train_Targets <- read_parquet("C:/Users/olara/Downloads/data/data/A/train_targets.parquet")
View(A_Train_Targets)
View(A_X_Test_Estimated)
View(A_X_Train_Estimated)
plot(A_Train_Targets)
library(arrow)
A_X_Train_Observed <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_observed.parquet")
A_X_Train_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_estimated.parquet")
A_X_Test_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_test_estimated.parquet")
A_Train_Targets <- read_parquet("C:/Users/olara/Downloads/data/data/A/train_targets.parquet")
plot(A_Train_Targets)
View(A_Train_Targets)
plot(A_Train_Targets, type = "s")
plot(A_Train_Targets, type = ls")
plot(A_Train_Targets, type = "l")
plot(A_Train_Targets, type = "l")
plot(A_Train_Targets, type = "l")
View(A_X_Train_Estimated)
View(A_X_Train_Observed)
plot(A_X_Train_Observed[,1:2], type = "l")
plot(rbind(A_X_Train_Observed, A_X_Train_Estimated)[,1:2], type = "l")
rbind(A_X_Train_Observed, A_X_Train_Estimated)
plot(rbind(A_X_Train_Observed, A_X_Train_Estimated[,-1])[,1:2], type = "l")
plot(rbind(A_X_Train_Observed, A_X_Train_Estimated[,-1])[,1:3], type = "l")
plot(rbind(A_X_Train_Observed, A_X_Train_Estimated[,-1])[,1:2], type = "l")
plot(rbind(A_X_Train_Observed, A_X_Train_Estimated[,-1])[,c(1,3)], type = "l")
View(Neg_Pow_Inc_0)
library(readr)
Neg_Pow_Inc_0 <- read_csv("C:/Users/olara/Downloads/Neg_Pow_Inc_0.csv")
View(Neg_Pow_Inc_0)
Neg_Pow_Inc_0[1:721]
Neg_Pow_Inc_0[,1:721]
Neg_Pow_Inc_0[1:721,]
Neg_Pow_Inc_0[1:720,]
B <- Neg_Pow_Inc_0[1441:,]
B <- Neg_Pow_Inc_0[1441:2161,]
length(A)
B <- Neg_Pow_Inc_0[1441:2161,]
A <- Neg_Pow_Inc_0[1:720,]
B <- Neg_Pow_Inc_0[721:1440,]
B <- Neg_Pow_Inc_0[1441:2161,]
length(A)
nrow(A)
nrow(B)
A <- Neg_Pow_Inc_0[1:720,]
B <- Neg_Pow_Inc_0[721:1440,]
C <- Neg_Pow_Inc_0[1441:2161,]
nrow(B)
nrow(C)
C <- Neg_Pow_Inc_0[1441:2160,]
nrow(C)
View(A)
plot(A["predictions"])
A["predictions"]
plot(A[,2])
plot(A[,1],A[,2])
A[,1]
A[,2]
library(arrow)
A_X_Train_Observed <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_observed.parquet")
A_X_Train_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_train_estimated.parquet")
A_X_Test_Estimated <- read_parquet("C:/Users/olara/Downloads/data/data/A/X_test_estimated.parquet")
A_Train_Targets <- read_parquet("C:/Users/olara/Downloads/data/data/A/train_targets.parquet")
A_X_Train_Observed%>%autoplot()+theme_bw()+xlab("Years")+ ylab("Departures")
library(fpp2)
install.packages("fpp2", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
library(fpp2)
library(ggplot2)
A_X_Train_Observed%>%autoplot()+theme_bw()+xlab("Years")+ ylab("Departures")
A_X_Train_Observed%>%autoplot()+theme_bw()
A_X_Train_Observed
A_Train_Targets%>%autoplot()+theme_bw()
View(A_Train_Targets)
A_Train_Targets["pv_measurement"]%>%autoplot()+theme_bw()
A_Train_Targets["pv_measurement"]
A_Train_Targets[,2]%>%autoplot()+theme_bw()
A_Train_Targets[,2]
install.packages("forecast", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
library(forecast)
auto.arima(A_Train_Targets[,2])
install.packages("mice")
library(readxl)
A_Full_Data <- read_excel("C:/Users/Ola/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/A_Full_Data.xlsx")
View(A_Full_Data)
A_Full_Data[,2:]
A_Full_Data[,2:-1]
A_Full_Data[,2:51]
A_Full_Data_wo_dates = A_Full_Data[,2:51]
View(A_Full_Data_wo_dates)
A_Full_Data_wo_dates = A_Full_Data[,2:51]
library(mice)
library(mice)
A_Full_Data_wo_dates_wo_na = complete(mice(A_Full_Data_wo_dates))
A_Full_Data_wo_dates
A_Full_Data_wo_dates["absolute_humidity_2m"]
A_Full_Data_wo_dates[,"absolute_humidity_2m"]
A_Full_Data_wo_dates
library(readxl)
A_Full_Data <- read_excel("C:/Users/Ola/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/A_Full_Data.xlsx")
View(A_Full_Data)
A_Full_Data_wo_dates = A_Full_Data[,2:51]
library(mice)
A_Full_Data_wo_dates_wo_na = complete(mice(A_Full_Data_wo_dates))
A_Full_Data_wo_dates_wo_na = complete(mice(A_Full_Data_wo_dates, method = "cart"))
View(A_Full_Data)
View(A_Full_Data_wo_dates)
library(readxl)
A_Full_Data <- read_excel("C:/Users/Ola/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/A_Full_Data.xlsx")
View(A_Full_Data)
A_Full_Data_wo_dates = A_Full_Data[,2:51]
is.na(A_Full_Data_wo_dates)
A_Full_Data_wo_dates[is.na(A_Full_Data_wo_dates)]
A_Full_Data_wo_dates[,is.na(A_Full_Data_wo_dates)]
is.na(A_Full_Data_wo_dates)
sum(is.na(A_Full_Data_wo_dates))
A_Full_Data_wo_dates = A_Full_Data[,2:51]
library(mice)
A_Full_Data_wo_dates_wo_na = complete(mice(A_Full_Data_wo_dates, method = "cart"))
View(A_Full_Data_wo_dates_wo_na)
A_Full_Data_wo_dates == A_Full_Data_wo_dates_wo_na
(A_Full_Data_wo_dates == A_Full_Data_wo_dates_wo_na) == F
sum((A_Full_Data_wo_dates == A_Full_Data_wo_dates_wo_na) == F)
is.na(A_Full_Data)
sum(is.na(A_Full_Data))
sum(is.na(A_Full_Data))
sum(is.na(A_Full_Data_wo_dates_wo_na))
sum(is.na(A_Full_Data_wo_dates))
sum(is.na(A_Full_Data[,1]))
sum(is.na(A_Full_Data[,2]))
sum(is.na(A_Full_Data[,2]))
sum(is.na(A_Full_Data_wo_dates[,2]))
sum(is.na(A_Full_Data_wo_dates[,1]))
sum(is.na(A_Full_Data_wo_dates_wo_na[,1]))
for i in 1:ncol(A_Full_Data_wo_dates) {
for (i in 1:ncol(A_Full_Data_wo_dates)) {
print(sum(is.na(A_Full_Data_wo_dates[,i])))
}
print(sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
print(sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
}
print(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
print(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
}
cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])))
}
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test == 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
colnames(A_Full_Data_wo_dates_wo_na)
if (test != 0) cat(colnames(A_Full_Data_wo_dates_wo_na)[i], sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(colnames(A_Full_Data_wo_dates_wo_na)[i], sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
if (test != 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
if (test != 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(i, sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
if (test != 0) cat(i, colnames(A_Full_Data_wo_dates_wo_na)[i], sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(i, colnames(A_Full_Data_wo_dates_wo_na)[i], sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
install.packages("writexl")
library(writexl)
write_xlsx(A_Full_Data_wo_dates_wo_na, "A_Full_Data_wo_NA.xlsx")
library(readxl)
A_Full_Data <- read_excel("C:/Users/Ola/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/A_Full_Data.xlsx")
View(A_Full_Data)
View(A_Full_Data)
View(A_Full_Data)
A_Full_Data[,2:51]
A_Full_Data[,5:51]
A_Full_Data[,7:51]
A_Full_Data_wo_dates = A_Full_Data[,7:51]
library(mice)
A_Full_Data_wo_dates_wo_na = complete(mice(A_Full_Data_wo_dates, method = "cart"))
sum(is.na(A_Full_Data[,2]))
for (i in 1:ncol(A_Full_Data_wo_dates)) {
print(sum(is.na(A_Full_Data_wo_dates[,i])))
}
for (i in 1:ncol(A_Full_Data_wo_dates_wo_na)) {
test = sum(is.na(A_Full_Data_wo_dates_wo_na[,i]))
if (test != 0) cat(i, colnames(A_Full_Data_wo_dates_wo_na)[i], sum(is.na(A_Full_Data_wo_dates_wo_na[,i])), "\n")
}
plot(A_Full_Data_wo_dates_wo_na[,0], type = "l")
plot(A_Full_Data[,:1], A_Full_Data_wo_dates_wo_na[,1], type = "l")
plot(A_Full_Data[,1], A_Full_Data_wo_dates_wo_na[,1], type = "l")
A_Full_Data[,1]
A_Full_Data
A_Full_Data_wo_dates_wo_na
A_Full_Data[,7]
plot(A_Full_Data[,1], A_Full_Data[,7], type = "l")
A_Full_Data[,7]
A_Full_Data_wo_dates_wo_na[,1]
A_Full_Data_wo_dates_wo_na
A_Full_Data
A_Full_Data_wo_dates_wo_na
A_Full_Data_wo_dates_wo_na[,[1]]
A_Full_Data_wo_dates_wo_na[,1]
plot(A_Full_Data[,1], A_Full_Data[,7], type = "l")
A_Full_Data[,1]
A_Full_Data[,7]
A_Full_Data[,1]
A_Full_Data_wo_dates_wo_na[,1]
A_Full_Data[,1]
plot(A_Full_Data[,1], A_Full_Data_wo_dates_wo_na[,1], type = "l")
A_Full_Data[,7]
A_Full_Data[,7]
len(A_Full_Data[,7])
nrows(A_Full_Data[,7])
nrow(A_Full_Data[,7])
nrow(A_Full_Data[,1])
nrow(A_Full_Data[,7])
nrow(A_Full_Data[,1])
plot(A_Full_Data[,1], A_Full_Data[,7], type = "l")
A_Full_Data[,1]
A_Full_Data[,7]
[A_Full_Data[,7]]
plot(A_Full_Data[,1], A_Full_Data[,7], type = "l")
A_Full_Data_wo_dates_wo_na[,1]
A_Full_Data_wo_dates_wo_na
A_Full_Data_wo_dates_wo_na[,2]
A_Full_Data_wo_dates_wo_na[,1]
plot(A_Full_Data[,1], as.vector(A_Full_Data[,7]), type = "l")
as.vector(A_Full_Data[,7])
A_Full_Data[,1]
A_Full_Data$absolute_humidity_2m__gm3
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l")
lines(A_Full_Data_wo_dates_wo_na[,2], type = "l")
lines(A_Full_Data_wo_dates_wo_na[,2], type = "l", col = "red")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l")
lines(A_Full_Data_wo_dates_wo_na[,2], type = "l", col = "red")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
lines(A_Full_Data_wo_dates_wo_na[,2], type = "l", col = "blue")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
lines(A_Full_Data_wo_dates_wo_na[,2], type = "l", col = "blue")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
lines(A_Full_Data_wo_dates_wo_na[,1], type = "l", col = "blue")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
lines(A_Full_Data_wo_dates_wo_na[,1], type = "l", col = "blue")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
lines(A_Full_Data_wo_dates_wo_na$absolute_humidity_2m__gm3, type = "l", col = "blue")
plot(A_Full_Data[,1], A_Full_Data$absolute_humidity_2m__gm3, type = "l", col = "red")
plot(A_Full_Data[,1], A_Full_Data_wo_dates_wo_na$absolute_humidity_2m__gm3, type = "l", col = "blue")
X_test_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_test_a.xlsx")
library(readxl)
train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/train_a.xlsx")
X_test_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_test_a.xlsx")
X_train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_train_a.xlsx")
library(readxl)
train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/train_a.xlsx")
X_train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_train_a.xlsx")
X_test_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_test_a.xlsx")
library(readxl)
train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/train_a.xlsx")
X_train_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_train_a.xlsx")
X_test_a <- read_excel("C:/Users/olara/OneDrive/Matematiske Fag Master/7. Semester/TDT4173/Project Master data/data_cleaned/A/X_test_a.xlsx")
View(train_a)
View(X_test_a)
View(X_train_a)
plot(train_a["pv_measurement"])
plot(1:norw(train_a),train_a["pv_measurement"])
plot(1:nrow(train_a),train_a["pv_measurement"])
1:nrow(train_a)
nrow(train_a)
plot(:nrow(train_a),train_a["pv_measurement"])
plot(1:nrow(train_a),train_a["pv_measurement"])
1:nrow(train_a)
train_a["pv_measurement"]
len(train_a["pv_measurement"])
train_a["pv_measurement"].len()
nrow(train_a["pv_measurement"])
plot(1:nrow(train_a),train_a[,2])
train_a[,2]
plot(train_a[,1],train_a[,2])
train_a[,1]
train_a[,2]
train_a[,1]
length(train_a[,2])
View(train_a)
length(train_a[,1])
plot(as.vector(train_a[,1]),as.vector(train_a[,2]))
as.vector(train_a[,1])
plot(train_a$time,train_a$pv_measurement)
plot(train_a$time,train_a$pv_measurement, type = "l")
plot(train_a$time,train_a$pv_measurement, type = "s")
plot(train_a$time,train_a$pv_measurement, type = "l")
?plot
rbind(train_a, X_train_a)
train_a
X_train_a
rbind(train_a, X_train_a[,2:])
X_train_a[,2:]
rbind(train_a, X_train_a[,-1])
X_train_a[,-1]
train_a
cbind(train_a, X_train_a[,-1])
train_a_new = cbind(train_a, X_train_a[,-1])
?glm
colnames(train_a_new)
colnames(train_a_new)[3]
as.formula(pv_measurement ~ colnames(train_a_new)[3])
test = glm(as.formula(colnames(train_a_new)[2] ~ colnames(train_a_new)[3]), poisson(), train_a_new)
as.formula(colnames(train_a_new)[2] ~ colnames(train_a_new)[3])
str1 = colnames(train_a_new)[2]
str1
as.formula(str1 ~ colnames(train_a_new)[3])
as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3])))
?paste
as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+")))
as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], colnames(train_a_new)[4], sep = "+")))
glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new)
?glm
X_train_a
train_a
X_train_a
as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+")))
train_a_new
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new)
train_a_new
train_a_new = cbind(train_a, X_train_a[,-1])
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new)
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new[1:100])
train_a_new = cbind(train_a, X_train_a[,-1])
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new[1:100])
train_a_new[1:100]
train_a_new
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new[1:100,])
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new[1:100,])
summary(test)
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(colnames(train_a_new)[3], sep = "+"))), poisson(), train_a_new)
summary(test)
install.packages("cv", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
library(cv)
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(., sep = "+"))), poisson(), train_a_new)
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(".", sep = "+"))), poisson(), train_a_new)
summary(test)
train_a_new = cbind(train_a$pv_measurement, X_train_a[,-1])
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(".", sep = "+"))), poisson(), train_a_new)
summary(test)
train_a$pv_measurement
train_a_new = cbind(train_a[,2], X_train_a[,-1])
train_a_new
test = glm(as.formula(paste(colnames(train_a_new)[2], "~", paste(".", sep = "+"))), poisson(), train_a_new)
summary(test)
test = glm(pv_measurment ~., poisson(), train_a_new)
test = glm(pv_measurement ~., poisson(), train_a_new)
summary(test)
train_a_new = cbind(train_a[,2], X_train_a[,-1])
test = glm(pv_measurement ~., poisson(), train_a_new)
summary(test)
library(MASS)
dim(train_a_new)
log(dim(train_a_new)[1])
?stepAIC
stepAIC(test, direction = 'both')
stepAIC(test, direction = 'forward')
stepAIC(test, direction = 'backward')
library(MASS)
stepAIC(test, direction = 'backward')
train_a_new = cbind(as.integer(train_a[,2]), X_train_a[,-1])
train_a_new
as.integer(train_a[,2])
train_a_new = cbind(int(train_a[,2]), X_train_a[,-1])
train_a_new = cbind(as.numeric(train_a[,2]), X_train_a[,-1])
train_a_new
as.numeric(train_a[,2])
train_a_new = cbind(round(train_a[,2]), X_train_a[,-1])
train_a_new
train_a_new = cbind(round(train_a[,2]), X_train_a[,-1])
test = glm(pv_measurement ~., poisson(), train_a_new)
summary(test)
stepAIC(test, direction = 'both')
stepAIC(test, direction = 'backward')
train_a_new = cbind(round(train_a[,2]), X_train_a[,-1])
test1 = glm(pv_measurement ~., poisson(), train_a_new)
summary(test1)
test2 = glm(pv_measurement ~ 1, poisson(), train_a_new)
summary(test2)
test1_test = stepAIC(test1, direction = 'backward')
test2_test = stepAIC(test2, direction = 'forward')
install.packages("nestfs", lib="C:/Users/olara/OneDrive/R/R-4.2.3/library")
library(nestfs)
fsf = fs(pv_measurement ~., train_a_new, poisson())
train_a_new
fsf = fs(pv_measurement ~ 1, train_a_new, poisson())
fsf = fs(pv_measurement ~ 1, train_a_new, gaussian())
