"0","plot_est_fun <- function(estimates) {"
"0","  df <- data.frame(estimates$mu)"
"0","  colnames(df) <- c(""E"", ""N"", ""v"", ""u"")"
"0","  df <- df %>% mutate(w = sqrt(df$v^2 + df$u^2), t = 1:nrow(df))"
"0","  "
"0","  p1 <- ggplot(df) +"
"0","    geom_point(aes(E, N, color = w), size = 2) +"
"0","    geom_point(aes(x = 0, y = 0), size = 2, color = ""red"") +"
"0","    geom_text(aes(x = 0, y = 0, label = ""Sensor A""), size = 6, hjust = .5, vjust = -2) +"
"0","    geom_point(aes(x = 40, y = 40), size = 2, color = ""red"") +"
"0","    geom_text(aes(x = 40, y = 40, label = ""Sensor B""), size = 6, hjust = .5, vjust = -2) +"
"0","    geom_label(aes(x = 0, y = 40, label = paste(""Running time:"", round(estimates$time, 3), ""secs"")), size = 6, hjust = 0, vjust = .5, alpha = .5) +"
"0","    coord_fixed() +"
"0","    scale_color_viridis_c(""Speed"", limits = c(8, 32)) +"
"0","    lims(x = c(-5, 45), y = c(-5, 45))"
"0","  lower_95_CI_df <- data.frame(x = numeric(nrow(df)), y = numeric(nrow(df)), w = df$w)"
"0","  upper_95_CI_df <- data.frame(x = numeric(nrow(df)), y = numeric(nrow(df)), w = df$w)"
"0","  "
"0","  for (i in 1:nrow(df)) {"
"0","    lower_95_CI_df$x[i] <- df$E[i] - qnorm(.975) * sqrt(estimates$Sigma[[i]][1, 1])"
"0","    lower_95_CI_df$y[i] <- df$N[i] - qnorm(.975) * sqrt(estimates$Sigma[[i]][2, 2])"
"0","    upper_95_CI_df$x[i] <- df$E[i] + qnorm(.975) * sqrt(estimates$Sigma[[i]][1, 1])"
"0","    upper_95_CI_df$y[i] <- df$N[i] + qnorm(.975) * sqrt(estimates$Sigma[[i]][2, 2])"
"0","  }"
"0","  "
"0","  p1 <- p1 + geom_path(aes(x = x, y = y, color = w), lower_95_CI_df, lineend = ""round"", linewidth = 1.5) +"
"0","    geom_path(aes(x = x, y = y, color = w), upper_95_CI_df, lineend = ""round"", linewidth = 1.5) +"
"0","    guides(color = guide_colorbar(label = T, ticks = F, barwidth = 1, barheight = 20)) +"
"0","    theme(axis.text = element_text(size = 25, margin = unit(0.5, ""cm"")),"
"0","             axis.title = element_blank(),"
"0","             legend.title = element_text(size = 15),"
"0","             legend.text = element_text(size = 14),"
"0","             # legend.position = ""none"","
"0","             axis.line = element_line(colour = ""black""),"
"0","             axis.ticks = element_line(linewidth = 1),"
"0","             axis.ticks.length = unit(0.3, ""cm""),"
"0","             # panel.background = element_blank(),"
"0","             # panel.grid.major = element_blank(),"
"0","             # panel.grid.minor = element_blank(),"
"0","           )"
"0","  "
"0","  # x1 <- seq(-5, 45, 0.1)"
"0","  # x2 <- seq(-5, 45, 0.1)"
"0","  # colors_vector <- viridis(50)"
"0","  # for (i in 1:nrow(df)) {"
"0","  #   z <- outer(x1, x2, function(x, y) dmvnorm(cbind(x,y), estimates$mu[i,1:2], estimates$Sigma[[i]][1:2, 1:2]))"
"0","  #   df2 <- data.frame(x1 = rep(x1, length(x2)), x2 = rep(x2, each = length(x1)), z = as.vector(z))"
"0","  #   "
"0","  #   p1 <- p1 + geom_contour(aes(x1, x2, z = z), df2, color = colors_vector[which(df$w[i] == sort(df$w))], alpha = .5, linewidth = .3, bins = 2)"
"0","  # }"
"0","  "
"0","  return(p1)"
"0","}"
