"0","EKF <- function(y, mu_1, Q_1, A, Q_t, R_t){"
"0","  # Initialize"
"0","  tilde_mu <- matrix(NA, nrow(y) + 1, 4)"
"0","  hat_mu <- matrix(NA, nrow(y), 4)"
"0","  tilde_Sigma <- list()"
"0","  hat_Sigma <- list()"
"0","  tilde_mu[1,] <- mu_1"
"0","  tilde_Sigma[[1]] <- Q_1"
"0","  "
"0","  for (i in 1:nrow(y)) {"
"0","    # Update step"
"0","    S <- jacobian_H(tilde_mu[i,]) %*% tilde_Sigma[[i]] %*% t(jacobian_H(tilde_mu[i,])) + R_t"
"0","    K <- tilde_Sigma[[i]] %*% t(jacobian_H(tilde_mu[i,])) %*% solve(S)"
"0","    hat_mu[i,] <- tilde_mu[i,] + K %*% (y[i,] - h(tilde_mu[i,]))"
"0","    hat_Sigma[[i]] <- tilde_Sigma[[i]] - K %*% jacobian_H(tilde_mu[i,]) %*% tilde_Sigma[[i]]"
"0","    "
"0","    # Prediction step"
"0","    tilde_mu[i + 1,] <- A %*% hat_mu[i,]"
"0","    tilde_Sigma[[i + 1]] <- A %*% hat_Sigma[[i]] %*% t(A) + Q_t"
"0","  }"
"0","  "
"0","  return(list(mu = hat_mu, Sigma = hat_Sigma))"
"0","}"
"0",""
"0","EKF_mu_Sigma <- EKF(sensor, mu_1, Q_1, A, Q_t, R_t)"
"0",""
"0","EKF_mu_Sigma_plot <- plot_est_fun(EKF_mu_Sigma)"
"0","EKF_mu_Sigma_plot"
