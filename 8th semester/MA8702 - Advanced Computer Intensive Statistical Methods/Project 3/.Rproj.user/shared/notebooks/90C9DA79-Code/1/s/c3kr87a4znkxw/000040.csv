"0","PF <- function(y, mu_1, Q_1, A, Q_t, R_t, n_particles) {"
"0","  start.time <- Sys.time()"
"0","  # Initialize"
"0","  set.seed(10)"
"0","  particles <- list()"
"0","  mu <- matrix(NA, nrow(y), 4)"
"0","  Sigma <- list()"
"0","  reset_weight <- rep(1/n_particles, n_particles)"
"0","  "
"0","  w_sum <- 0"
"0","  particles[[1]] <- cbind(rmvnorm(n_particles, mu_1, Q_1), reset_weight)"
"0","  particles[[1]][, 5] <- particles[[1]][, 5] * dmvnorm(y[1,], h(particles[[1]][, 1:4]), R_t)"
"0","  w_sum <- w_sum + sum(particles[[1]][, 5])"
"0","  particles[[1]][, 5] <- particles[[1]][, 5] / w_sum"
"0","  sample_indices <- sample(1:n_particles, n_particles, replace = TRUE, prob = particles[[1]][, 5])"
"0","  particles[[1]][, 1:4] <- particles[[1]][sample_indices, 1:4]"
"0","  particles[[1]][, 5] <- reset_weight"
"0","  mu[1,] <- colSums(particles[[1]][, 1:4] * particles[[1]][, 5])"
"0","  Sigma[[1]] <- cov(particles[[1]][, 1:4] * particles[[1]][, 5])"
"0","  "
"0","  for (i in 2:nrow(y)) {"
"0","    particles[[i]] <- matrix(NA, n_particles, 5)"
"0","    w_sum <- 0"
"0","    for (j in 1:n_particles) {"
"0","      particles[[i]][j, 1:4] <- mvrnorm(1, A %*% particles[[i - 1]][j, 1:4], Q_t)"
"0","      particles[[i]][j, 5] <- particles[[i - 1]][j, 5] * dmvnorm(y[i,], h(particles[[i]][j, 1:4]), R_t)"
"0","      w_sum <- w_sum + particles[[i]][j, 5]"
"0","    }"
"0","    particles[[i]][, 5] <- particles[[i]][, 5] / w_sum"
"0","    sample_indices <- sample(1:n_particles, n_particles, replace = TRUE, prob = particles[[i]][, 5])"
"0","    particles[[i]][, 1:4] <- particles[[i]][sample_indices, 1:4]"
"0","    particles[[i]][, 5] <- reset_weight"
"0","    mu[i,] <- colSums(particles[[i]][, 1:4] * particles[[i]][, 5])"
"0","    Sigma[[i]] <- matrix(0, 4, 4)"
"0","  }"
"0","  end.time <- Sys.time()"
"0","  time.taken <- end.time - start.time"
"0","  return(list(mu = mu, Sigma = Sigma, time = time.taken))"
"0","}"
"0",""
"0","PF_mu_Sigma_particles_10000 <- PF(sensor, mu_1, Q_1, A, Q_t, R_t, 10000)"
"0",""
"0","PF_mu_Sigma_particles_10000_plot <- plot_est_fun(PF_mu_Sigma_particles_10000)"
"0","PF_mu_Sigma_particles_10000_plot"
