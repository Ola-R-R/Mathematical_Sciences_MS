"0","library(rstan)"
"0","library(bayesplot)"
"0","library(rstudioapi)"
"0","options(mc.cores = parallel::detectCores())"
"0","rstan_options(auto_write = TRUE)"
"0",""
"0","pump_data <- list("
"0","  Pump = 10,"
"0","  y = c(5,  1, 5,  14, 3,  19, 1, 1, 4, 22),"
"0","  t = c(94.3, 15.7, 62.9, 126.0, 5.24, 31.4, 1.05, 1.05, 2.1, 10.5)"
"0",")"
"0",""
"0","fit <- stan("
"0","  file = ""pump.stan"","
"0","  data = pump_data,"
"0","  chains = 10,"
"0","  warmup = 1000,"
"0","  iter = 2000,"
"0","  refresh = 1000,"
"0","  seed = 123"
"0",")"
"0",""
"0","print(fit)"
"1","Inference for Stan model: "
"1",""
"1","anon_model"
"1",""
"1",".
"
"1","10"
"1",""
"1"," chains, each with iter="
"1",""
"1","2000"
"1",""
"1","; warmup="
"1",""
"1","1000"
"1",""
"1","; thin="
"1",""
"1","1"
"1",""
"1","; 
"
"1",""
"1","post-warmup draws per chain="
"1",""
"1","1000"
"1",""
"1",", "
"1",""
"1","total post-warmup draws="
"1",""
"1","10000"
"1",""
"1",".

"
"1","           "
"1","   mean"
"1"," se_mean"
"1","   sd"
"1","   2.5%"
"1","    25%"
"1","    50%"
"1","    75%"
"1","  97.5%"
"1"," n_eff"
"1"," Rhat"
"1","
alpha      "
"1","   0.70"
"1","    0.00"
"1"," 0.27"
"1","   0.28"
"1","   0.51"
"1","   0.66"
"1","   0.85"
"1","   1.32"
"1","  6593"
"1","    1"
"1","
beta       "
"1","   0.92"
"1","    0.01"
"1"," 0.55"
"1","   0.18"
"1","   0.53"
"1","   0.81"
"1","   1.20"
"1","   2.26"
"1","  7426"
"1","    1"
"1","
lambda[1]  "
"1","   0.06"
"1","    0.00"
"1"," 0.03"
"1","   0.02"
"1","   0.04"
"1","   0.06"
"1","   0.07"
"1","   0.12"
"1"," 10978"
"1","    1"
"1","
lambda[2]  "
"1","   0.10"
"1","    0.00"
"1"," 0.08"
"1","   0.01"
"1","   0.04"
"1","   0.08"
"1","   0.14"
"1","   0.30"
"1"," 12870"
"1","    1"
"1","
lambda[3]  "
"1","   0.09"
"1","    0.00"
"1"," 0.04"
"1","   0.03"
"1","   0.06"
"1","   0.08"
"1","   0.11"
"1","   0.18"
"1"," 11398"
"1","    1"
"1","
lambda[4]  "
"1","   0.12"
"1","    0.00"
"1"," 0.03"
"1","   0.06"
"1","   0.09"
"1","   0.11"
"1","   0.13"
"1","   0.18"
"1"," 11416"
"1","    1"
"1","
lambda[5]  "
"1","   0.61"
"1","    0.00"
"1"," 0.32"
"1","   0.16"
"1","   0.38"
"1","   0.56"
"1","   0.78"
"1","   1.38"
"1"," 13737"
"1","    1"
"1","
lambda[6]  "
"1","   0.61"
"1","    0.00"
"1"," 0.14"
"1","   0.37"
"1","   0.51"
"1","   0.60"
"1","   0.70"
"1","   0.91"
"1"," 11743"
"1","    1"
"1","
lambda[7]  "
"1","   0.90"
"1","    0.01"
"1"," 0.71"
"1","   0.07"
"1","   0.39"
"1","   0.72"
"1","   1.22"
"1","   2.73"
"1"," 11685"
"1","    1"
"1","
lambda[8]  "
"1","   0.90"
"1","    0.01"
"1"," 0.72"
"1","   0.08"
"1","   0.38"
"1","   0.72"
"1","   1.22"
"1","   2.83"
"1"," 12788"
"1","    1"
"1","
lambda[9]  "
"1","   1.58"
"1","    0.01"
"1"," 0.77"
"1","   0.46"
"1","   1.03"
"1","   1.44"
"1","   2.01"
"1","   3.42"
"1"," 10708"
"1","    1"
"1","
lambda[10] "
"1","   1.99"
"1","    0.00"
"1"," 0.43"
"1","   1.24"
"1","   1.70"
"1","   1.97"
"1","   2.26"
"1","   2.91"
"1"," 11048"
"1","    1"
"1","
lambdat[1] "
"1","   5.61"
"1","    0.02"
"1"," 2.36"
"1","   1.93"
"1","   3.90"
"1","   5.28"
"1","   6.98"
"1","  11.03"
"1"," 10978"
"1","    1"
"1","
lambdat[2] "
"1","   1.58"
"1","    0.01"
"1"," 1.23"
"1","   0.13"
"1","   0.68"
"1","   1.28"
"1","   2.15"
"1","   4.79"
"1"," 12870"
"1","    1"
"1","
lambdat[3] "
"1","   5.62"
"1","    0.02"
"1"," 2.36"
"1","   1.98"
"1","   3.90"
"1","   5.32"
"1","   6.98"
"1","  11.14"
"1"," 11398"
"1","    1"
"1","
lambdat[4] "
"1","  14.56"
"1","    0.04"
"1"," 3.83"
"1","   8.07"
"1","  11.84"
"1","  14.20"
"1","  16.91"
"1","  22.92"
"1"," 11416"
"1","    1"
"1","
lambdat[5] "
"1","   3.20"
"1","    0.01"
"1"," 1.66"
"1","   0.84"
"1","   1.99"
"1","   2.92"
"1","   4.08"
"1","   7.25"
"1"," 13737"
"1","    1"
"1","
lambdat[6] "
"1","  19.18"
"1","    0.04"
"1"," 4.29"
"1","  11.63"
"1","  16.12"
"1","  18.94"
"1","  21.85"
"1","  28.59"
"1"," 11743"
"1","    1"
"1","
lambdat[7] "
"1","   0.95"
"1","    0.01"
"1"," 0.75"
"1","   0.08"
"1","   0.41"
"1","   0.75"
"1","   1.28"
"1","   2.87"
"1"," 11685"
"1","    1"
"1","
lambdat[8] "
"1","   0.95"
"1","    0.01"
"1"," 0.76"
"1","   0.08"
"1","   0.40"
"1","   0.75"
"1","   1.28"
"1","   2.97"
"1"," 12788"
"1","    1"
"1","
lambdat[9] "
"1","   3.32"
"1","    0.02"
"1"," 1.63"
"1","   0.96"
"1","   2.16"
"1","   3.03"
"1","   4.22"
"1","   7.19"
"1"," 10708"
"1","    1"
"1","
lambdat[10]"
"1","  20.94"
"1","    0.04"
"1"," 4.47"
"1","  13.06"
"1","  17.81"
"1","  20.65"
"1","  23.74"
"1","  30.58"
"1"," 11048"
"1","    1"
"1","
lp__       "
"1"," -43.95"
"1","    0.04"
"1"," 2.63"
"1"," -49.98"
"1"," -45.47"
"1"," -43.56"
"1"," -42.03"
"1"," -39.88"
"1","  3689"
"1","    1"
"1","
"
"1","
Samples were drawn using "
"1",""
"1","NUTS(diag_e)"
"1",""
"1"," at "
"1",""
"1","Tue Apr 30 11:00:07 2024"
"1",""
"1",".
"
"1",""
"1","For each parameter, n_eff is a crude measure of effective sample size,
"
"1",""
"1","and Rhat is the potential scale reduction factor on split chains (at 
"
"1",""
"1","convergence, Rhat=1).
"
